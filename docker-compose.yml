version: "3.7"

services:
  web: &web
    build:
      context: ./app
    env_file: .env
    command: uwsgi --ini /usr/src/app/uwsgi.ini
    volumes:
      - ./app/:/usr/src/app/
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    # ports:
    #   - 8000:8000  # uncomment to access uwsgi directly
    expose:
      - 8000
    depends_on:
      - db
      - redis

  channelserver:
    <<: *web
    command: daphne --bind 0.0.0.0 --port 5000 -v 1 escriptorium.asgi:application
    expose:
      - 5000

  db:
    image: postgres:10.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env

  redis:
    image: redis:3.0-alpine

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - 8080:80
    depends_on:
      - web

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    # expose:
    #   - 9200
    ports:
      - 9200:9200
    # networks:  # use this if adding nodes
    #   - esnet

  celeryworker:
    build:
      context: ./app
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    command: celery -E -A escriptorium worker -l INFO

  celerybeat:
    build:
      context: ./app
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    command: celery -E -A escriptorium beat -l INFO

volumes:
  postgres_data:
  static_volume:
  media_volume:
  esdata:
    driver: local